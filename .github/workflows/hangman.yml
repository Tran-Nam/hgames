# .github/workflows/haskell.yml

name: Haskell CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  
permissions:
  contents: read

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    # Define the GHC versions to test against
    strategy:
      matrix:
        ghc: [ '8.10.7', '9.4.8', '9.8.2' ] # Common versions to test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Haskell
        uses: haskell/actions/setup@v2
        with:
          ghc-version: ${{ matrix.ghc }}
          # You can specify a different build tool if needed (e.g., 'cabal')
          # but 'stack' is often easier for a first CI setup.
          tool: cabal
          
      # -----------------------------------------------------------------
      # STACK Workflow Steps
      # -----------------------------------------------------------------
      
      # 1. Cache dependencies for faster builds
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cabal/store
            dist-newstyle
          key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('stack.yaml') }}-${{ hashFiles('package.yaml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('stack.yaml') }}-
            
      # 2. Build the project
      - name: Build project
        # --test-suite and --no-run-tests ensures all dependencies are built, 
        # but defers running the tests to the next step.
        run: cd hangman || cabal build all
        
      # 3. Run the tests
      - name: Run tests
        run: cd hangman || cabal test all
